// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Datas;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("api.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductOptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductOptionId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("api.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            Name = "Smart Phone"
                        },
                        new
                        {
                            Id = new Guid("54733eda-9e2f-4675-a25c-1e46a5d4a347"),
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("0241b743-ca16-4c25-96da-a2cf73dc008e"),
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = new Guid("e75c26e7-ce66-4fd7-a55e-fee9eb20b3a4"),
                            Name = "Smart Watch"
                        },
                        new
                        {
                            Id = new Guid("b0326961-b2c9-4681-8e36-d892cc1ca7ed"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("api.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("api.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid?>("OrderTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("api.Models.OrderType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f235200-957f-4051-83fa-93f0b7d5e2d3"),
                            Name = "confirmed"
                        },
                        new
                        {
                            Id = new Guid("f7e5cbee-e5de-4a7d-b688-5e56fdf96573"),
                            Name = "pending"
                        },
                        new
                        {
                            Id = new Guid("afb8d8b7-4035-42aa-a157-03f56d67c314"),
                            Name = "cancelled"
                        });
                });

            modelBuilder.Entity("api.Models.Preview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("Previews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c193f4e-2a62-4d4a-847e-6ec878328bcc"),
                            ProductDetailId = new Guid("c7ee18b0-f1df-4540-aa8e-da8e3daf83f8")
                        },
                        new
                        {
                            Id = new Guid("b1fecedb-da85-43ca-bab3-feb345654797"),
                            ProductDetailId = new Guid("c7ee18b0-f1df-4540-aa8e-da8e3daf83f8")
                        },
                        new
                        {
                            Id = new Guid("b01229c8-45e4-4c7a-985c-0926199d15f2"),
                            ProductDetailId = new Guid("596a66a7-0b96-48cd-a33c-1f064626d232")
                        },
                        new
                        {
                            Id = new Guid("47dce916-9bfd-4af7-8b89-14a370637157"),
                            ProductDetailId = new Guid("596a66a7-0b96-48cd-a33c-1f064626d232")
                        },
                        new
                        {
                            Id = new Guid("381becd2-49f8-4dac-b8dc-71dd539cdbc0"),
                            ProductDetailId = new Guid("c1676b8b-c54b-4ba6-9b0d-1dee242c9e3b")
                        },
                        new
                        {
                            Id = new Guid("bd9f34f0-50d8-4528-b69f-e9fcc527a21f"),
                            ProductDetailId = new Guid("c1676b8b-c54b-4ba6-9b0d-1dee242c9e3b")
                        },
                        new
                        {
                            Id = new Guid("a97fd080-0c35-4d28-906e-96e6640a4695"),
                            ProductDetailId = new Guid("ba35cb9e-f12e-420a-bf4c-0879197623a8")
                        },
                        new
                        {
                            Id = new Guid("ade17c19-e768-4d19-b1d9-280a8a21dd05"),
                            ProductDetailId = new Guid("ba35cb9e-f12e-420a-bf4c-0879197623a8")
                        },
                        new
                        {
                            Id = new Guid("871abd86-41ee-40d9-aed0-09097db8d978"),
                            ProductDetailId = new Guid("2034d5b0-b7f5-4832-a7cf-460e78d7065a")
                        },
                        new
                        {
                            Id = new Guid("0cc23b1e-2e69-4b55-ae6b-01d58db049ca"),
                            ProductDetailId = new Guid("2034d5b0-b7f5-4832-a7cf-460e78d7065a")
                        },
                        new
                        {
                            Id = new Guid("ea02a621-8c84-4721-8076-266d916a61c0"),
                            ProductDetailId = new Guid("864f3b52-4c9f-45a0-8ef1-77001da42d8d")
                        },
                        new
                        {
                            Id = new Guid("1925f384-c0c1-4192-87a2-3779bdb778dd"),
                            ProductDetailId = new Guid("864f3b52-4c9f-45a0-8ef1-77001da42d8d")
                        },
                        new
                        {
                            Id = new Guid("7326c5cb-f779-426a-9642-b70657c4bc44"),
                            ProductDetailId = new Guid("b73adcad-88d7-4b61-9336-761d6d1b62c0")
                        },
                        new
                        {
                            Id = new Guid("0189ef5b-5bc1-4648-8d3b-71053faf3741"),
                            ProductDetailId = new Guid("b73adcad-88d7-4b61-9336-761d6d1b62c0")
                        },
                        new
                        {
                            Id = new Guid("7623b9a1-bf62-42ba-8be8-1aec31053a20"),
                            ProductDetailId = new Guid("864f3b52-4c9f-45a0-8ef1-77001da42d8d")
                        },
                        new
                        {
                            Id = new Guid("19d6845e-7bef-4d1d-b82f-82d5cebe1322"),
                            ProductDetailId = new Guid("864f3b52-4c9f-45a0-8ef1-77001da42d8d")
                        },
                        new
                        {
                            Id = new Guid("539665e7-4c24-4b21-8db2-4468852c5ec6"),
                            ProductDetailId = new Guid("b75bb959-2e2e-4b72-8e24-1413684b74b8")
                        },
                        new
                        {
                            Id = new Guid("0f42be38-d4c4-4432-97fe-9216b2684a76"),
                            ProductDetailId = new Guid("b75bb959-2e2e-4b72-8e24-1413684b74b8")
                        },
                        new
                        {
                            Id = new Guid("0c756696-a404-489a-b7cd-7bf2ba612fa8"),
                            ProductDetailId = new Guid("e65ad7b9-3057-4076-9f83-9fd188843060")
                        },
                        new
                        {
                            Id = new Guid("7d30c313-2d62-43d7-b119-1221fce6ede7"),
                            ProductDetailId = new Guid("e65ad7b9-3057-4076-9f83-9fd188843060")
                        },
                        new
                        {
                            Id = new Guid("440a00a1-9f0b-499b-b97a-c86bbed1a157"),
                            ProductDetailId = new Guid("a5523622-b1af-4c46-bdba-a6d7e81bb77a")
                        },
                        new
                        {
                            Id = new Guid("ffdbfd00-fa81-4319-b42a-c7a166ee0c70"),
                            ProductDetailId = new Guid("a5523622-b1af-4c46-bdba-a6d7e81bb77a")
                        },
                        new
                        {
                            Id = new Guid("cb9af524-f2e7-4b2a-9f5a-d2bfd8e9a55c"),
                            ProductDetailId = new Guid("66911a47-4c59-48ea-a5d1-865ef31c3239")
                        },
                        new
                        {
                            Id = new Guid("35c17127-ef28-43c7-ba5b-b048da5727ec"),
                            ProductDetailId = new Guid("66911a47-4c59-48ea-a5d1-865ef31c3239")
                        },
                        new
                        {
                            Id = new Guid("b88a35e1-ce56-4529-b393-8bcc75a076d8"),
                            ProductDetailId = new Guid("1d609039-2fc2-498a-88ec-e2240a68a3d4")
                        },
                        new
                        {
                            Id = new Guid("b310f17b-5989-4d6a-8611-59ce810d5fa3"),
                            ProductDetailId = new Guid("1d609039-2fc2-498a-88ec-e2240a68a3d4")
                        },
                        new
                        {
                            Id = new Guid("393d5edc-abea-453e-9067-81e4c82e4998"),
                            ProductDetailId = new Guid("1d609039-2fc2-498a-88ec-e2240a68a3d4")
                        },
                        new
                        {
                            Id = new Guid("bb3b3b23-e9fd-4f4b-bf7a-8a8afdec27e6"),
                            ProductDetailId = new Guid("1d609039-2fc2-498a-88ec-e2240a68a3d4")
                        });
                });

            modelBuilder.Entity("api.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("ThumbnailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1565a344-d40c-4284-aaa5-f084678ff799"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi redmi note 10"
                        },
                        new
                        {
                            Id = new Guid("6623e124-e536-412c-93bc-17c7e8980e35"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi redmi note 11"
                        },
                        new
                        {
                            Id = new Guid("6b41897f-b2f7-49ff-8dce-a9f8a84379f4"),
                            CategoryId = new Guid("0241b743-ca16-4c25-96da-a2cf73dc008e"),
                            CreatedOn = new DateTime(2024, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop Lenovo ThinkBook 14 Ultra 7"
                        },
                        new
                        {
                            Id = new Guid("dae33944-cd29-4d3e-a52f-71d43f7306e8"),
                            CategoryId = new Guid("0241b743-ca16-4c25-96da-a2cf73dc008e"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop Lenovo ThinkBook 15 Ultra 7"
                        },
                        new
                        {
                            Id = new Guid("7f825066-55ed-4b5e-bc6e-006c516c31f0"),
                            CategoryId = new Guid("0241b743-ca16-4c25-96da-a2cf73dc008e"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop Apple MacBook Air 13"
                        },
                        new
                        {
                            Id = new Guid("33af0787-75a0-4ad5-87db-1641cf490c02"),
                            CategoryId = new Guid("0241b743-ca16-4c25-96da-a2cf73dc008e"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop Lenovo IdeaPad 15 Ultra 7"
                        },
                        new
                        {
                            Id = new Guid("a1c679a8-a8e9-4243-9302-877193167ef2"),
                            CategoryId = new Guid("0241b743-ca16-4c25-96da-a2cf73dc008e"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop HP 15"
                        },
                        new
                        {
                            Id = new Guid("3a1bb49d-401e-45d3-a907-74b0288fee2b"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPad 10 WiFi"
                        },
                        new
                        {
                            Id = new Guid("982b3ca3-e5f1-4970-a958-41e8de10b2be"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPad Air 6 WiFi"
                        },
                        new
                        {
                            Id = new Guid("e7000a32-e887-4246-a6dc-1988f2d66959"),
                            CategoryId = new Guid("b0326961-b2c9-4681-8e36-d892cc1ca7ed"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TWS JBL Wave Beam 2"
                        },
                        new
                        {
                            Id = new Guid("3a986b6e-b2ca-40f5-9f42-6dd84dc5291f"),
                            CategoryId = new Guid("b0326961-b2c9-4681-8e36-d892cc1ca7ed"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TWS JBL Wave Beam 1"
                        },
                        new
                        {
                            Id = new Guid("1a5c94ac-43d3-42a5-b5d6-1fc7ee40ca3a"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi redmi note 8"
                        },
                        new
                        {
                            Id = new Guid("e56e3e30-1aac-4d83-8cf7-5e47c7a796e2"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xiaomi redmi note 7"
                        },
                        new
                        {
                            Id = new Guid("0830baab-2bb5-4fab-9566-a5c71db6dc0f"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung A30"
                        },
                        new
                        {
                            Id = new Guid("006b0864-fa5f-4657-8bd9-24ca15ed82ff"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samsung A70"
                        },
                        new
                        {
                            Id = new Guid("5c0a46c5-d34c-4cb5-8111-1ffbf1de055f"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPhone X 256GB"
                        },
                        new
                        {
                            Id = new Guid("7dc7e323-bb50-461f-b888-7a292b9f0470"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "iPhone 8"
                        },
                        new
                        {
                            Id = new Guid("c4bebabe-f85a-4931-8230-777a74ff3f1e"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vivo 1"
                        },
                        new
                        {
                            Id = new Guid("32f2ea2a-9f1d-4d0f-9b62-42df41d9060c"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vivo 2"
                        },
                        new
                        {
                            Id = new Guid("5fb7c7ae-d5ff-4c2b-a60b-91bed322d975"),
                            CategoryId = new Guid("442f967f-1aa0-4aeb-8d35-c94fea58c98f"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vivo 3"
                        });
                });

            modelBuilder.Entity("api.Models.ProductDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BeforePrice")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<float>("TotalRating")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7ee18b0-f1df-4540-aa8e-da8e3daf83f8"),
                            BeforePrice = 5000000f,
                            Description = "Description of product",
                            Price = 4500000f,
                            ProductId = new Guid("1565a344-d40c-4284-aaa5-f084678ff799"),
                            Stock = 100,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("596a66a7-0b96-48cd-a33c-1f064626d232"),
                            BeforePrice = 5100000f,
                            Description = "Description of product",
                            Price = 5000000f,
                            ProductId = new Guid("6623e124-e536-412c-93bc-17c7e8980e35"),
                            Stock = 50,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("c1676b8b-c54b-4ba6-9b0d-1dee242c9e3b"),
                            BeforePrice = 25000000f,
                            Description = "Description of product",
                            Price = 24500000f,
                            ProductId = new Guid("6b41897f-b2f7-49ff-8dce-a9f8a84379f4"),
                            Stock = 50,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("ba35cb9e-f12e-420a-bf4c-0879197623a8"),
                            BeforePrice = 24000000f,
                            Description = "Description of product",
                            Price = 21500000f,
                            ProductId = new Guid("dae33944-cd29-4d3e-a52f-71d43f7306e8"),
                            Stock = 20,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("2034d5b0-b7f5-4832-a7cf-460e78d7065a"),
                            BeforePrice = 26000000f,
                            Description = "Description of product",
                            Price = 2150000f,
                            ProductId = new Guid("7f825066-55ed-4b5e-bc6e-006c516c31f0"),
                            Stock = 200,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("b73adcad-88d7-4b61-9336-761d6d1b62c0"),
                            BeforePrice = 2400000f,
                            Description = "Description of product",
                            Price = 2150000f,
                            ProductId = new Guid("33af0787-75a0-4ad5-87db-1641cf490c02"),
                            Stock = 200,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("864f3b52-4c9f-45a0-8ef1-77001da42d8d"),
                            BeforePrice = 2400000f,
                            Description = "Description of product",
                            Price = 2150000f,
                            ProductId = new Guid("a1c679a8-a8e9-4243-9302-877193167ef2"),
                            Stock = 200,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("b75bb959-2e2e-4b72-8e24-1413684b74b8"),
                            BeforePrice = 11000000f,
                            Description = "Description of product",
                            Price = 8500000f,
                            ProductId = new Guid("3a1bb49d-401e-45d3-a907-74b0288fee2b"),
                            Stock = 100,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("e65ad7b9-3057-4076-9f83-9fd188843060"),
                            BeforePrice = 11000000f,
                            Description = "Description of product",
                            Price = 8500000f,
                            ProductId = new Guid("982b3ca3-e5f1-4970-a958-41e8de10b2be"),
                            Stock = 100,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("a5523622-b1af-4c46-bdba-a6d7e81bb77a"),
                            BeforePrice = 11000000f,
                            Description = "Description of product",
                            Price = 8500000f,
                            ProductId = new Guid("e7000a32-e887-4246-a6dc-1988f2d66959"),
                            Stock = 100,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("66911a47-4c59-48ea-a5d1-865ef31c3239"),
                            BeforePrice = 11000000f,
                            Description = "Description of product",
                            Price = 8500000f,
                            ProductId = new Guid("3a986b6e-b2ca-40f5-9f42-6dd84dc5291f"),
                            Stock = 100,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("1d609039-2fc2-498a-88ec-e2240a68a3d4"),
                            BeforePrice = 2150000f,
                            Description = "Description of product",
                            Price = 2000000f,
                            ProductId = new Guid("1a5c94ac-43d3-42a5-b5d6-1fc7ee40ca3a"),
                            Stock = 100,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("214b0870-5d51-4cf3-8c19-0c920a1c1c0f"),
                            BeforePrice = 1850000f,
                            Description = "Description of product",
                            Price = 950000f,
                            ProductId = new Guid("e56e3e30-1aac-4d83-8cf7-5e47c7a796e2"),
                            Stock = 30,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("95cd6dee-9321-445e-8b07-6a21fa636e88"),
                            BeforePrice = 2850000f,
                            Description = "Description of product",
                            Price = 1950000f,
                            ProductId = new Guid("0830baab-2bb5-4fab-9566-a5c71db6dc0f"),
                            Stock = 130,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("90356543-a5d9-433b-afb6-f2abb997487c"),
                            BeforePrice = 3285000f,
                            Description = "Description of product",
                            Price = 2950000f,
                            ProductId = new Guid("006b0864-fa5f-4657-8bd9-24ca15ed82ff"),
                            Stock = 50,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("e95fa4eb-21e8-4c25-b8b1-4a3683c736c9"),
                            BeforePrice = 23850000f,
                            Description = "Description of product",
                            Price = 20850000f,
                            ProductId = new Guid("5c0a46c5-d34c-4cb5-8111-1ffbf1de055f"),
                            Stock = 50,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("c4b1ec49-1a63-478d-a7f2-5c88eca59d3a"),
                            BeforePrice = 13850000f,
                            Description = "Description of product",
                            Price = 8500000f,
                            ProductId = new Guid("7dc7e323-bb50-461f-b888-7a292b9f0470"),
                            Stock = 150,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("eb72a97a-6b26-4ca9-bcb4-970b8478dbfc"),
                            BeforePrice = 11500000f,
                            Description = "Description of product",
                            Price = 10500000f,
                            ProductId = new Guid("c4bebabe-f85a-4931-8230-777a74ff3f1e"),
                            Stock = 50,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("1cf25c81-65fc-45cf-ba25-23840ea74470"),
                            BeforePrice = 1500000f,
                            Description = "Description of product",
                            Price = 1000000f,
                            ProductId = new Guid("5fb7c7ae-d5ff-4c2b-a60b-91bed322d975"),
                            Stock = 50,
                            TotalRating = 0f
                        },
                        new
                        {
                            Id = new Guid("7a339b8c-b088-475a-9a38-d566a0c0ae33"),
                            BeforePrice = 21500000f,
                            Description = "Description of product",
                            Price = 20500000f,
                            ProductId = new Guid("32f2ea2a-9f1d-4d0f-9b62-42df41d9060c"),
                            Stock = 50,
                            TotalRating = 0f
                        });
                });

            modelBuilder.Entity("api.Models.ProductOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("ProductOptions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcf2efa8-321e-4a7b-a915-7f80017b2c64"),
                            Name = "Red",
                            ProductDetailId = new Guid("c7ee18b0-f1df-4540-aa8e-da8e3daf83f8")
                        },
                        new
                        {
                            Id = new Guid("e4e47c49-e7ff-4496-9028-9c7617f5c08e"),
                            Name = "Blue",
                            ProductDetailId = new Guid("c7ee18b0-f1df-4540-aa8e-da8e3daf83f8")
                        },
                        new
                        {
                            Id = new Guid("0d978831-f446-47d1-9ea4-d9349bf5b73b"),
                            Name = "Black",
                            ProductDetailId = new Guid("596a66a7-0b96-48cd-a33c-1f064626d232")
                        },
                        new
                        {
                            Id = new Guid("679c2c40-15ee-4898-aecb-ca318b024b74"),
                            Name = "White",
                            ProductDetailId = new Guid("596a66a7-0b96-48cd-a33c-1f064626d232")
                        },
                        new
                        {
                            Id = new Guid("76fdfcef-78b0-420f-97b0-4fd08c247e67"),
                            Name = "Orange",
                            ProductDetailId = new Guid("c1676b8b-c54b-4ba6-9b0d-1dee242c9e3b")
                        },
                        new
                        {
                            Id = new Guid("85652863-e101-43d4-bae2-f0fe52323b0e"),
                            Name = "Red",
                            ProductDetailId = new Guid("c1676b8b-c54b-4ba6-9b0d-1dee242c9e3b")
                        },
                        new
                        {
                            Id = new Guid("df069bcf-33d3-4a40-99d5-a286c8921ec3"),
                            Name = "Green",
                            ProductDetailId = new Guid("ba35cb9e-f12e-420a-bf4c-0879197623a8")
                        },
                        new
                        {
                            Id = new Guid("82cfc378-c2ae-4c8b-89b2-625bfc445fd5"),
                            Name = "Yellow",
                            ProductDetailId = new Guid("ba35cb9e-f12e-420a-bf4c-0879197623a8")
                        },
                        new
                        {
                            Id = new Guid("d0f9d23b-5312-4e10-8e3e-2c2739f17352"),
                            Name = "Original",
                            ProductDetailId = new Guid("2034d5b0-b7f5-4832-a7cf-460e78d7065a")
                        },
                        new
                        {
                            Id = new Guid("f4c2a916-3629-49b2-9d7e-a827a3ee54eb"),
                            Name = "Classic",
                            ProductDetailId = new Guid("2034d5b0-b7f5-4832-a7cf-460e78d7065a")
                        });
                });

            modelBuilder.Entity("api.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductDetailId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("api.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c26b7fcb-9e16-47aa-893e-3ef148de9714"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f80eee5a-eefe-49c6-9a11-2e5b3804a71c"),
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("AvatarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9b120bf-5e4b-453e-8c8a-423b8872ece3"),
                            CreatedOn = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "$2a$11$3DnMnL3JrizdEtWpgg5ut.rp0jkJrUSlRyLbYBZpA94DYfSYFkJLa",
                            RoleId = new Guid("c26b7fcb-9e16-47aa-893e-3ef148de9714")
                        });
                });

            modelBuilder.Entity("api.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Code")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Factor")
                        .HasColumnType("real");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86a42389-5ba4-4449-a0a8-341a8c20a903"),
                            Code = new Guid("a43b7ac4-21e1-4afb-8b6c-a5a3a23edbea"),
                            CreatedAt = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiredAt = new DateTime(2099, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Factor = 0.1f,
                            IsActive = false,
                            Name = "Welcome"
                        });
                });

            modelBuilder.Entity("api.Models.Cart", b =>
                {
                    b.HasOne("api.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("api.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Models.CartItem", b =>
                {
                    b.HasOne("api.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId");

                    b.HasOne("api.Models.Order", "Order")
                        .WithMany("CartItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("api.Models.Product", "Product")
                        .WithMany("SelectedItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.ProductOption", "ProductOption")
                        .WithMany()
                        .HasForeignKey("ProductOptionId");

                    b.Navigation("Cart");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("ProductOption");
                });

            modelBuilder.Entity("api.Models.Order", b =>
                {
                    b.HasOne("api.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId");

                    b.HasOne("api.Models.OrderType", "OrderType")
                        .WithMany("Orders")
                        .HasForeignKey("OrderTypeId");

                    b.HasOne("api.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("OrderType");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("api.Models.Preview", b =>
                {
                    b.HasOne("api.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("api.Models.ProductDetail", "ProductDetail")
                        .WithMany("Previews")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Image");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("api.Models.Product", b =>
                {
                    b.HasOne("api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("api.Models.Image", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("Category");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("api.Models.ProductDetail", b =>
                {
                    b.HasOne("api.Models.Product", "Product")
                        .WithOne("ProductDetail")
                        .HasForeignKey("api.Models.ProductDetail", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("api.Models.ProductOption", b =>
                {
                    b.HasOne("api.Models.ProductDetail", "ProductDetail")
                        .WithMany("ProductOptions")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("api.Models.Review", b =>
                {
                    b.HasOne("api.Models.ProductDetail", "ProductDetail")
                        .WithMany()
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.User", "User")
                        .WithOne("Review")
                        .HasForeignKey("api.Models.Review", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.HasOne("api.Models.Image", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.HasOne("api.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Avatar");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("api.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("api.Models.Order", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("api.Models.OrderType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("api.Models.Product", b =>
                {
                    b.Navigation("ProductDetail")
                        .IsRequired();

                    b.Navigation("SelectedItems");
                });

            modelBuilder.Entity("api.Models.ProductDetail", b =>
                {
                    b.Navigation("Previews");

                    b.Navigation("ProductOptions");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("Orders");

                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
